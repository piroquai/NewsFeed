package hello;

import org.json.JSONArray;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Optional;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser(@RequestParam String link
            , @RequestParam String title, @RequestParam String description) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Feed1 n = new Feed1();
        n.setLink(link);
        n.setTitle(title);
        n.setDescription(description);
        userRepository.save(n);
        return "Saved";
    }
    // Попытался ввести селект по id , по не работает,
    // надо добавлять колонку и разбираться с generatedvalue или самим id заполнять

    @GetMapping(path = "/fox")
    public @ResponseBody
    Iterable<Feed1> selectFox() throws Exception {

return userRepository.findFox();
    }

    @GetMapping(path = "/nyt")
    public @ResponseBody
    Iterable<Feed1> selectNYT() throws Exception {

        return userRepository.findNYT();
    }
//  вывод таблицы на выбор с помощью Selector, есть проблемы с форматом
//    @GetMapping(path = "/select")
//    public @ResponseBody
//    String selectFeed(@RequestParam String table) throws Exception {
//        Selector selector = new Selector();
//        selector.setTable(table);
//           return selector.getSelected(table).toString();


    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Feed1> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}
